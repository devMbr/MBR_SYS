@model MBR.Web.Models.WarnRuleModels
@{
    Layout = "~/Views/Shared/_Index_Layout.cshtml";
}

@using (Ajax.BeginForm("WarnRuleEdit", "MembraneAlert", null, new AjaxOptions
{
    HttpMethod = "POST",
    OnSuccess = "OnSuccess",
    OnFailure = "OnFailure",
}, new { @class = "form-horizontal", id = "frmEdit" }))
{
    <div class="box">
        <div class="form-body box-body">
            <h3>透水率预警</h3>
            <div class="form-group">
                @Html.HiddenFor(model => model.permeableRrateAlert.PermeableRrateAlertID)

                @Html.LabelFor(model => model.permeableRrateAlert.OnlineMin, new { @class = "control-label col-md-2" })

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.permeableRrateAlert.OnlineMin, new { @class = "form-control " })
                    @Html.ValidationMessageFor(model => model.permeableRrateAlert.OnlineMin)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.permeableRrateAlert.OnlineMax, new { @class = "control-label col-md-2" })

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.permeableRrateAlert.OnlineMax, new { @class = "form-control " })
                    @Html.ValidationMessageFor(model => model.permeableRrateAlert.OnlineMax)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.permeableRrateAlert.OfflineMin, new { @class = "control-label col-md-2" })

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.permeableRrateAlert.OfflineMin, new { @class = "form-control " })
                    @Html.ValidationMessageFor(model => model.permeableRrateAlert.OfflineMin)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.permeableRrateAlert.OfflineMax, new { @class = "control-label col-md-2" })

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.permeableRrateAlert.OfflineMax, new { @class = "form-control " })
                    @Html.ValidationMessageFor(model => model.permeableRrateAlert.OfflineMax)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.permeableRrateAlert.ChangeMin, new { @class = "control-label col-md-2" })

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.permeableRrateAlert.ChangeMin, new { @class = "form-control " })
                    @Html.ValidationMessageFor(model => model.permeableRrateAlert.ChangeMin)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.permeableRrateAlert.ChangeMax, new { @class = "control-label col-md-2" })

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.permeableRrateAlert.ChangeMax, new { @class = "form-control " })
                    @Html.ValidationMessageFor(model => model.permeableRrateAlert.ChangeMax)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.permeableRrateAlert.DurationMax, new { @class = "control-label col-md-2" })

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.permeableRrateAlert.DurationMax, new { @class = "form-control " })
                    @Html.ValidationMessageFor(model => model.permeableRrateAlert.DurationMax)
                </div>
            </div>

            <h3>膜寿命预警</h3>
            <div class="form-group">
                @Html.HiddenFor(model => model.membraneAlert.MembraneAlertID)

                @Html.LabelFor(model => model.membraneAlert.PermeableRateMin, new { @class = "control-label col-md-2" })

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.membraneAlert.PermeableRateMin, new { @class = "form-control " })
                    @Html.ValidationMessageFor(model => model.membraneAlert.PermeableRateMin)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.membraneAlert.DurationMax, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.membraneAlert.DurationMax, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.membraneAlert.DurationMax)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.membraneAlert.AccumulativeChlorine, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.membraneAlert.AccumulativeChlorine, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.membraneAlert.AccumulativeChlorine)
                </div>
            </div>

            <h3>预警规则</h3>
            <div class="form-group">

                <div class="control-label col-md-1">
                    <button type="button" id="new_rule_btn" class="btn default" >
                        新建规则
                    </button>
                </div>
            </div>
            <table class="table table-striped table-bordered table-hover dataTable no-footer" role="grid">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.alertRule.RuleName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.alertRule.AltertInfo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.alertRule.Duration)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.alertRule.AheadOfTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.alertRule.Rules)
                    </th>
                    
                    <th>操作</th>
                </tr>
                <tbody id="contentField">
                    @if(Model.alertRuleList != null) {
                        foreach (var alertRuleList in Model.alertRuleList)
                        {
                            <tr id="tr_@Html.DisplayFor(model => alertRuleList.itmeId)">
                                <td>
                                    @Html.HiddenFor(modelItem => alertRuleList.itmeId)
                                    @Html.TextBoxFor(modelItem => alertRuleList.RuleName, new { @class = "form-control" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => alertRuleList.AltertInfo, new { @class = "form-control" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => alertRuleList.Duration, new { @class = "form-control" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => alertRuleList.AheadOfTime, new { @class = "form-control" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => alertRuleList.Rules, new { @class = "form-control" })
                                </td>
                                <td>
                                    <a href="javascript:void(0)" class="btnDel" onclick="oper.edit('')">编辑规则</a> 
                                    <a href="javascript:void(0)" class="btnDel" onclick="oper.del(@Html.DisplayFor(modelItem => alertRuleList.itmeId));">删除规则</a>
                                </td>
                            </tr>
                        }
                    }
                    </tbody>
            </table>


            <div class="form-group">

                <div class="control-label col-md-3">
                    <button id="btnEdit" type="submit" class="btn btn-primary">
                        保存
                    </button>
                </div>
            </div>
        </div>
</div>

}

@section scripts{
    <script>
        function OnSuccess(data) {
            parent.doSuccess(parent.$('.box-body'), data.message);
        }

        function OnFailure(data) {
            parent.doFailure(data.message);
        }

        $(function () {
            $('#new_rule_btn').on('click', function () {
                oper.add();
                
            })
        });
        var oper = {
            add: function () {

                if ($("input[name='itemId']") && $("input[name='itemId']").length != 0) {
                    var itemId = [];
                    $("input[name='itemId']").each(function () {
                        itemId.push(parseInt($(this).val()));
                    });
                    if (itemId.length != 0) {
                        var maxId = Math.max.apply(null, itemId);
                        if (maxId != undefined) {
                            var newMaxId = maxId + 1;
                            var html = appendHtml(newMaxId);
                            $("#tr_" + maxId).after(html);

                        }
                    }
                } else {
                    var newMaxId = 0;
                    var html = appendHtml(newMaxId);
                    $("#contentField").html(html);
                }

            },
            edit: function () {

            },
            del: function (itemId) {
                $("#tr_" + itemId).remove();
            }
        };

        function appendHtml(newMaxId){
            var trStr='<tr id="tr_'+newMaxId+'">'
                
                +'<td>'
			    + '<input type="hidden"  name="itemId" value="' + newMaxId + '"/>'
                + '<input type="text" class="form-control" name="alertRuleList[' + newMaxId + '].RuleName" value=""/>'
                + '</td>'

                +'<td>'
                + '<input type="text" class="form-control" name="alertRuleList[' + newMaxId + '].AltertInfo" value=""/>'
                + '</td>'

                +'<td>'
                    + '<input type="text" class="form-control" name="alertRuleList[' + newMaxId + '].Duration"  value=""/>'
                +'</td>'

                +'<td>'
                    + '<input type="text" class="form-control" name="alertRuleList[' + newMaxId + '].AheadOfTime"  value=""/>'
                + '</td>'

			    + '<td>'
                    + '<input type="text" class="form-control" name="alertRuleList[' + newMaxId + '].Rules"  value=""/>'
                + '</td>'
                
                + '<td>'
                    + '<a href="javascript:void(0)" class="btnDel" onclick="oper.edit(' + newMaxId + ');"><i class="fa fa-edit"></i> 编辑规则 </a>'
                    + '<a href="javascript:void(0)" class="btnDel" onclick="oper.del(' + newMaxId + ');"><i class="fa fa-trash-o"></i> 删除规则 </a>'
                +'</td>'
                +'</tr>';
		
            var html=trStr;
            return html;
        }
    </script>
}
